package share;
syntax = "proto3";

// position 
message pos2d {
    int32 x = 1; // x in pixel
    int32 y = 2; // y in pixel
}

// ----------------------------------------------------------------------------

// user data
message user_data {
    required string name = 1; // user name, ommited
    required string uid = 2; // user id
    required string wallet = 3; // wallet address
    required uint64 lastlogintm = 4; // last login time, unix time stamp in ms
}

// ----------------------------------------------------------------------------

// player simple info
message player_sinfo {
    required uint32 playerid = 1; // player id
    required uint32 heroava = 2; // current avatar info, use hero job as hero avatar see {sc:HeroNFT}
    required uint32 gender = 3; // gender
    required string pname = 4; // player name
    optional uint32 speed = 5; // move speed (may not exist, in this case, set speed in default value)
}

// player info 
message player_info {
    required player_sinfo sinfo = 1; // player simple info

    // TO DO : extend player info
}

// self player data
message player_data {
    uint32 mapid = 1; // current map id
    required player_info info = 2; // player info

    repeated hero_data heros = 3; // player heros
    repeated pet_data pets = 4; // player pets
    repeated ship_data ships = 5; // player ships

}

// mov info path node
message mov_path_node {
    int32 x = 1; // x in pixel
    int32 y = 2; // y in pixel
    float cost = 3; // time cost rate
}

// move info
message player_mov_info {
    repeated share.mov_path_node path = 1; // mov path
}

// hero data
message hero_data {
    required string heronftid = 1;  // hero nft id
    required uint32 mintType = 2; // = 0 normal mint, = 1 genesis mint
    required uint32 job = 3; // job, see hero config
    required uint32 grade = 4; // grade, from 1-10: D、C、B、A、S, N、R、SR、SSR、UR
    required uint32 mineAttr = 5; // mine attr, see hero config
    required uint32 battleAttr = 6; // battle attr, see hero config
    required uint32 bindFinTms = 7; // hero usage bind finish time stamp in second, see {sc:bindNFTUsage}
    required string bindType = 8; // hero usage bind type, see {sc:bindNFTUsage}
}

// pet data
message pet_data {
    required string heronftid = 1;  // pet hero nft id (pet & hero use same nft contract)
    required uint32 mintType = 2; // = 0 normal mint, = 1 genesis mint
    required uint32 petId = 3; // pet id, see pet config
    repeated uint32 avatarSlots = 4; // avatar slot, see pet config
    required uint32 mineAttr = 5; // mine attr, see pet config
    required uint32 battleAttr = 6; // battle attr, see pet config
    required uint32 bindFinTms = 7; // pet usage bind finish time stamp in second, see {sc:bindNFTUsage}
    required string bindType = 8; // pet usage bind type, see {sc:bindNFTUsage}
}

message ship_data {

}

// item data
message item_data {
    required uint32 itemid = 1; // item id, see in item config
    required int64 count = 2; // count
}

// ----------------------------------------------------------------------------

// mine point info
message mine_info {
    required uint32 mineid = 1; // mine point id
    required uint32 mineCountLeft = 2; // current minning count left
    required uint32 mineRecoverTms = 3; // next recover time stamp in second
    required uint32 mineCurMinningPls = 4; // current minning player count
}

// ----------------------------------------------------------------------------

// port data 
message port_data {
    uint32 portid = 1;  // port id

    repeated minning_data minnings = 2; // current hero minning info, not include manual mine
    optional storehouse_data storehouse = 3; // store house info
    optional factory_data factory = 4; // port factory info
    optional shop_data shop = 5; // shop info
    optional shipyard_data shipyard = 6; // ship yard info
}

// storehouse info
message storehouse_data {
    required uint32 maxrepoload = 1; // max load space
    repeated item_data items = 2; // goods/commodities in storehouse
}

// minning data
message minning_data {
    required string heronftid = 1;  // current minning hero nft id
    required uint32 mineid = 2; // current minnng id, see in mine config
    required uint32 startminetms = 3; // start minning time stamp, in second
    required uint32 lastoutputtms = 4; // last output time stamp, in secode
    required uint32 unfetchedoutput = 5; // unfetched output count
}

message factory_data {

}

message shop_data {

}

message shipyard_data {

}